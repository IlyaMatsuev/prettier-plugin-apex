# Adapted from https://github.com/iloveitaly/asdf-devcontainer/blob/main/Dockerfile
# This needs to be run at the root repo context, because it's caching dependencies
# based on files at that level
FROM mcr.microsoft.com/vscode/devcontainers/base:1.1.1-ubuntu24.04

# needs to be declared *after* FROM to be available in shell scripts
ARG ASDF_BRANCH="v0.14.0"

LABEL org.opencontainers.image.authors="Dang Mai <contact@dangmai.net>" \
      org.opencontainers.image.source=https://github.com/dangmai/prettier-plugin-apex \
      org.opencontainers.image.licenses="MIT" \
      org.opencontainers.image.title="Prettier Apex Devcontainer Image" \
      org.opencontainers.image.description="A Docker image for use with VS Code's Remote Containers extension or GitHub codespaces."

USER vscode
RUN git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch ${ASDF_BRANCH}

# including the asdf source in sh + bash profiles make it easier to run boostrap scripts
# which expect `asdf` to be available
RUN echo "\n. $HOME/.asdf/asdf.sh\n" | tee -a ~/.bashrc ~/.profile

COPY --chown=vscode:vscode .tool-versions /home/vscode/.tool-versions
ENV PATH=$PATH:/home/vscode/.asdf/bin:/home/vscode/.asdf/shims
WORKDIR /home/vscode
RUN cat .tool-versions | cut -d' ' -f1 | grep "^[^\#]" | xargs -i asdf plugin add {} && asdf install
RUN gu install native-image
RUN corepack enable
RUN asdf reshim nodejs
RUN pnpm completion bash > ~/completion-for-pnpm.bash
RUN echo 'source ~/completion-for-pnpm.bash' >> ~/.bashrc

# Prime PNPM cache store
RUN mkdir /home/vscode/project
COPY --chown=vscode:vscode package.json /home/vscode/project/package.json
COPY --chown=vscode:vscode pnpm-lock.yaml /home/vscode/project/pnpm-lock.yaml
COPY --chown=vscode:vscode pnpm-workspace.yaml /home/vscode/project/pnpm-workspace.yaml
COPY --chown=vscode:vscode packages/prettier-plugin-apex/package.json /home/vscode/project/packages/prettier-plugin-apex/package.json
COPY --chown=vscode:vscode packages/playground/package.json /home/vscode/project/packages/playground/package.json
RUN cd project && pnpm i --frozen-lockfile && cd .. && rm -rf project
