{
  "include": ["src/**/*", "typings/**/*", "vite.config.ts"],
  "compilerOptions": {
    "declaration": true /* Generates corresponding '.d.ts' file. */,
    "noUnusedLocals": true /* Report errors on unused locals. */,
    "noUnusedParameters": true /* Report errors on unused parameters. */,
    "noImplicitReturns": true /* Report error when not all code paths in function return a value. */,
    "noFallthroughCasesInSwitch": true /* Report errors for fallthrough cases in switch statement. */,
    "noUncheckedIndexedAccess": true /* Include 'undefined' in index signature results */,
    "noPropertyAccessFromIndexSignature": true /* Require undeclared properties from index signatures to use element accesses. */,
    "module": "ESNext" /* I wanted to use Node16 or NodeNext for this, however with that setting we run into this issue: https://github.com/microsoft/TypeScript/issues/50058 */,
    "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
    "lib": ["ES2023", "DOM"],
    "moduleResolution": "node",
    "outDir": "./dist",
    "sourceMap": true,
    "inlineSourceMap": false,
    "jsx": "react-jsx",
    "resolveJsonModule": true,
    "types": ["vite/client"]
  }
}
